openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/DCOIRAP/RBD/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/BHANOVERT/RBD-GYM/1.0.0
info:
  version: 1.0.0
  title: home-iot-api
  description: The API for the RBD-GYM project
paths:
  
  /categories:
    get:
      tags:
      - categories
      summary: "Lista las categorias"
      responses:
        "200":
          description: OK
          
  /categories/{id}/products[search=boxeo&sortBy=[name|price]]:
    get:
      tags:
      - categories
      summary: "buscar dentro de una categoria mediante unos filtros"
      parameters:
      - name: search
        in: query
        description: busqueda
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortPrecio
        in: query
        description: ordenacion
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: +precio -precio
      - name: sortName
        in: query
        description: ordenacion
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: A-Z, Z-A
      - name: ProductosBusqueda
        in: query
        description: busqueda de productos, ordenados a partir del nombre o del precio
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: id
        in: path
        description: id del producto
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request - Los parametros son erroneos"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          
  /products/{id}:
    get:
      tags:
      - productos
      summary: "Lista los detalles de un producto"
      parameters:
      - name: id
        in: path
        description: id del producto
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productos'
        "400":
          description: "Bad Request - El producto no existe"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              
  /cart:
    get:
      tags:
      - Carrito
      summary: "Lista los elementos del carrito"
      parameters:
      - name: Token
        in: header
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productos'
        "401":
          description: 'Unauthorized: Token de sesión no válido'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Carrito
      summary: "Añade un producto al carrito"
      parameters:
      - name: sessionToken
        in: header
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productos'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request-El 'productId' no viajó en el cuerpo de la petición o el ID era inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'Unauthorized: Token de sesión no válido'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cart/{ProductosId}:
    delete:
      tags:
      - Carrito
      summary: "Elimina un producto del carrito"
      parameters:
      - name: ProductosId
        in: path
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sessionToken
        in: header
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request - El {productId} no es válido (no existe en el carrito del usuario)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'Unauthorized: Token de sesión no válido'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Carrito
      summary: "Cambia la cantidad de un producto en el carrito"
      parameters:
      - name: ProductosId
        in: path
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sessionToken
        in: header
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart_ProductosId_body'
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request - La petición no tiene 'op', 'path' ó 'value' en el cuerpo; o bien el {productId} no es válido; o bien el nuevo 'value' es 0 ó negativo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'Unauthorized: Token de sesión no válido'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /checkout:
    post:
      tags: 
        - Carrito
      summary: "Confirma una compra ficticia"
      parameters:
      - name: sessionToken
        in: header
        description: Token del usuario
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
        "401":
          description: 'Unauthorized: Token de sesión no válido'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict - El usuario no tiene artículos en el carro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /clases:
    get:
      tags:
        - Clases
      summary: "Lista las clases"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clases'
        
components:
  schemas:
    productos:
      required:
      - Nombre
      - ProductosId
      type: object
      properties:
        ProductosId:
          type: integer
          format: int32
          readOnly: true
        Nombre:
          type: string
        Precio:
          type: number
        Color:
          type: string
        imagen:
          type: string
        descripcion:
          type: string
        CategoriaId:
          type: integer
          format: int32
    clases:
      required:
      - Id
      type: object
      properties:
        Id:
          type: integer
          format: int32
          readOnly: true
        Nombre:
          type: string
        Horarios:
          type: string
    
    Error:
      type: object
      properties:
        code:
          type: string
          description: Código de error
        status:
          type: integer
          description: httpstatus
          format: int32
        type:
          type: string
          description: Tipo de error
        message:
          type: string
          description: Mensaje de error
          
    cart_ProductosId_body:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: integer
  parameters:
    sortParamPrecio:
      name: sortPrecio
      in: query
      description: ordenacion
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: +precio -precio
    sortParamName:
      name: sortName
      in: query
      description: ordenacion
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: A-Z, Z-A
    searchParam:
      name: search
      in: query
      description: busqueda
      required: false
      style: form
      explode: true
      schema:
        type: string
